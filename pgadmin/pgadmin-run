#!/bin/bash

export DISPLAY_NAME="pgadmin"
# grab the username
source /etc/profile.d/0000-env.sh
eval $(cat /etc/cont-init.d/001-userconf.sh  | grep -E "^export USER_NAME" | envsubst)
eval $(cat /etc/cont-init.d/001-userconf.sh  | grep -E "^export GROUP_NAME" | envsubst)

# Set the default username and password
export PGADMIN_USER=${USER_NAME:=liveware}
export USER_EMAIL=${USER_EMAIL:=${PGADMIN_USER}'@localhost.com'}
export PGADMIN_EMAIL=${USER_EMAIL}
export PGADMIN_SETUP_EMAIL=${PGADMIN_EMAIL}
export PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}

export PGADMIN_PASSWORD=${PASSWORD:=password}
export PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
export PGADMIN_SETUP_EMAIL=${PGADMIN_EMAIL}
#export PGADMIN_SETUP_PASSWORD=${PGADMIN_PASSWORD}

export PGADMIN_DIR=${PGADMIN_DIR:="/usr/local/pgadmin4"}
# export PGADMIN_DIR=${PGADMIN_DIR:="/usr/pgadmin4"}

export PGADMIN_DATA_DIR="$(su - ${USER_NAME} -c 'echo ${XDG_DATA_HOME}/pgadmin4')"
export PGADMIN_STORAGE_DIR=${PGADMIN_STORAGE_DIR:=${PGADMIN_DATA_DIR}/storage}
export PGADMIN_SQLITE_PATH=${PGADMIN_DATA_DIR}/pgadmin4.db
export PGADMIN_SESSION_DB_PATH=${PGADMIN_DATA_DIR}/sessions

export PGADMIN_LOG_DIR="/var/log/pgadmin"
export PGADMIN_LOG_FILE=${PGADMIN_LOG_DIR}"/pgadmin4.log"
export PGADMIN_AZURE_CREDENTIAL_CACHE_DIR=${PGADMIN_AZURE_CREDENTIAL_CACHE_DIR:=${PGADMIN_DATA_DIR}"/azurecredentialcache"}
export PGADMIN_KERBEROS_CCACHE_DIR=${PGADMIN_KERBEROS_CCACHE_DIR:=${PGADMIN_DATA_DIR}"/krbccache"}

export PGADMIN_REMOTE_USER_HEADER=${PGADMIN_REMOTE_USER_HEADER:='REMOTE_USER'}

# setup config_distro.py
config_distro_path=${PGADMIN_DIR}/config_distro.py
touch ${config_distro_path}







echo "
LOG_FILE = '/dev/null'
DEFAULT_BINARY_PATHS = {
        'pg': '/usr/bin'
}

MASTER_PASSWORD_REQUIRED    = False
DATA_DIR                    = '${PGADMIN_DATA_DIR}'
SQLITE_PATH                 = '${PGADMIN_SQLITE_PATH}'
SESSION_DB_PATH             = '${PGADMIN_SESSION_DB_PATH}'
STORAGE_DIR                 = '${PGADMIN_STORAGE_DIR}'
ENABLE_PSQL                 = True
ENABLE_BINARY_PATH_BROWSING = True
SERVER_MODE                 = True
UPGRADE_CHECK_ENABLED       = False
LOG_FILE                    = '${PGADMIN_LOG_FILE}'
AZURE_CREDENTIAL_CACHE_DIR  = '${PGADMIN_AZURE_CREDENTIAL_CACHE_DIR}'
KERBEROS_CCACHE_DIR         = '${PGADMIN_KERBEROS_CCACHE_DIR}'
DESKTOP_USER                = '${PGADMIN_DEFAULT_EMAIL}'
PGADMIN_DEFAULT_EMAIL       = '${PGADMIN_DEFAULT_EMAIL}'
PGADMIN_SETUP_EMAIL         = '${PGADMIN_DEFAULT_EMAIL}'
PGADMIN_DEFAULT_PASSWORD    = '${PGADMIN_PASSWORD}'
PGADMIN_SETUP_PASSWORD      = '${PGADMIN_PASSWORD}'
AUTHENTICATION_SOURCES      = ['internal']
#AUTHENTICATION_SOURCES     = ['webserver']
WEBSERVER_AUTO_CREATE_USER  = True
#REMOTE_USER_HEADER         = 'HTTP_${PGADMIN_REMOTE_USER_HEADER}'
#WEBSERVER_REMOTE_USER      = 'HTTP_${PGADMIN_REMOTE_USER_HEADER}'

# Number of values to trust for X-Forwarded-For
PROXY_X_FOR_COUNT    = 10
PROXY_X_PROTO_COUNT  = 10
PROXY_X_HOST_COUNT   = 10
PROXY_X_PORT_COUNT   = 10
PROXY_X_PREFIX_COUNT = 10
X_FRAME_OPTIONS = ''

" > ${config_distro_path}

# make webserver auth work with http headers:
# - gunicorn captures http headers in its environ as HTTP_{HEADER_NAME}
#    eg: Header REMOTE_USER is HTTP_REMOTE_USER
# - we're replacing the harcoded 
# - replace 'REMOTE_USER' environ with 
# sed -i "s/'REMOTE_USER'/config.REMOTE_USER_HEADER/g" ${PGADMIN_DIR}/pgadmin/authenticate/webserver.py

# if you need to change the header name pgadmin users for webserver auth, do something like:
# sed -i -E "s/header_up\s+REMOTE_USER/header-up NEW_HEADER_NAME/g" /etc/caddy/Caddyfile
# sed -i -E "s/header_up\s+REMOTE_USER\s+{env.USER_NAME}/header-up NEW_HEADER_NAME  {env.NEW_ENVIRONMENT_VAR}/g" /etc/caddy/Caddyfile

# propagate PGADMIN_CONFIG_* env vars to config_ditro.py
for var in $(env | grep PGADMIN_CONFIG_ | cut -d "=" -f 1); do
    echo "${var##PGADMIN_CONFIG_} = ${var}" >> ${config_distro_path}
    #echo ${var##PGADMIN_CONFIG_} = $(eval "echo \$$var") >> ${config_distro_path}
done

# Initialize DB before starting Gunicorn
# Importing pgadmin4 (from this script) is enough
#su - ${USER_NAME} -c "${PGADMIN_BASE_DIR}/venv/bin/python3 ${PGADMIN_DIR}/run_pgadmin.py"
mkdir -p ${PGADMIN_LOG_DIR}
chown -R ${USER_NAME}:${GROUP_NAME} ${PGADMIN_DIR}
chown -R ${USER_NAME}:${GROUP_NAME} ${PGADMIN_LOG_DIR}

COMMAND_ARGS="
--timeout 86400 \
--bind 0.0.0.0:5050 \
-e SCRIPT_NAME=/pgadmin \
-e REMOTE_USER=${PGADMIN_USER} \
--pythonpath=${PGADMIN_DIR} \
-w 1 \
--threads 25 \
--access-logfile - \
-c gunicorn_config.py \
run_pgadmin:app \
"

COMMAND=" \
export DESKTOP_USER='${PGADMIN_EMAIL}' \
export PGADMIN_DEFAULT_EMAIL='${PGADMIN_EMAIL}' \
export PGADMIN_SETUP_EMAIL='${PGADMIN_EMAIL}' \
export PGADMIN_DEFAULT_PASSWORD='${PGADMIN_PASSWORD}' \
export PGADMIN_SETUP_PASSWORD='${PGADMIN_PASSWORD}' \
export REMOTE_USER='${PGADMIN_EMAIL}' \
&& cd ${PGADMIN_DIR} \
&& source ${PGADMIN_DIR}/venv/bin/activate \
&& python /usr/local/pgadmin4/setup.py --user '${PGADMIN_SETUP_EMAIL}' \
&& ${PGADMIN_DIR}/venv/bin/gunicorn \
$(echo -n ${COMMAND_ARGS} ) "

su - ${USER_NAME} -c "{
  echo [\"$(date +%Y-%m-%dT%H:%M:%S%z)\"] info s6-${DISPLAY_NAME}' user:     '"'$(id)'" \
; echo [\"$(date +%Y-%m-%dT%H:%M:%S%z)\"] info s6-${DISPLAY_NAME}' command: '\"${COMMAND}\" \
; ${COMMAND} \
; }"

