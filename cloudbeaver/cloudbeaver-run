#!/bin/bash

# grab the username
source /etc/profile.d/0000-env.sh
eval $(cat /etc/cont-init.d/001-userconf.sh  | grep -E "^export USER_NAME" | envsubst)

# https://cloudbeaver.io/docs/Server-configuration/
export CB_SERVER_NAME=${CB_SERVER_NAME:="CloudBeaver"}
export CB_SERVER_URL=${CB_SERVER_URL:="http://localhost:8978"}
export CB_ADMIN_NAME=${CB_ADMIN_NAME:=${USER_NAME}} 
export CB_ADMIN_PASSWORD=${CB_ADMIN_PASSWORD:=${PASSWORD:-"password"}}

# cloudbeaver appears to colocate config overrides and user state, using XDG_DATA_HOME for both
#export CB_SERVER_WORKSPACELOCATION=${CB_SERVER_WORKSPACELOCATION:=${user_workspacelocation}}
export CLOUDBEAVER_HOME=${CLOUDBEAVER_HOME:=/opt/cloudbeaver}
export CB_SERVER_CONF_FILE=${CB_SERVER_CONF_FILE:="${CLOUDBEAVER_HOME}/conf/cloudbeaver.conf"}
export CB_SERVER_WORKSPACELOCATION=${CB_SERVER_WORKSPACELOCATION:=/opt/cloudbeaver/workspace}

# cloudbeaver doesn't seem to like changing workspace location, using symlink instead
user_xdg_data_home=$(su - ${USER_NAME} -c 'echo $XDG_DATA_HOME')
user_workspacelocation=${user_xdg_data_home}'/cloudbeaver'
mkdir -p ${user_workspacelocation}
# chmod -R 644 ${user_workspacelocation}
# chown -R ${USER_NAME}:${GROUP_NAME} ${user_workspacelocation}
# if symbolic link already exists, remove & replace it
[ -h ${CB_SERVER_WORKSPACELOCATION} ] && rm -f ${CB_SERVER_WORKSPACELOCATION}
# remove the workspace directory, if it exists
rm -rf ${CB_SERVER_WORKSPACELOCATION}
# symlink to the user's persistent workspacelocation
ln -sfn ${user_workspacelocation} ${CB_SERVER_WORKSPACELOCATION}

# if first run, make sure workspace directory doesn't exist
#[ ! -d "${CB_SERVER_WORKSPACELOCATION}/.metadata" ] && rm -rf ${CB_SERVER_WORKSPACELOCATION}



# it looks like the only way to change workspace location is by 
# editing the server config file (/opt/cloudbeaver/conf/cloudbeaver.conf by default)
#cb_server_workspacelocation_sed_expression="sed -i -E 's#(workspaceLocation: \\\")[^\\\"]+#\1${CB_SERVER_WORKSPACELOCATION}#' ${CB_SERVER_CONF_FILE}"
#eval ${cb_server_workspacelocation_sed_expression}

mkdir -p ${CB_SERVER_WORKSPACELOCATION}/.data

        # serverName: \"${CB_SERVER_NAME:-Cloud Beaver}\",
        # serverURL: \"${CB_SERVER_SERVERURL:-${CB_SERVER_URL}}\",
# populate the .cloudbeaver.runtime.conf file
cloudbeaver_server_runtime_conf_file=${CB_SERVER_WORKSPACELOCATION}/.data/.cloudbeaver.runtime.conf
if [[ ! -f ${cloudbeaver_server_runtime_conf_file} ]] ; then
echo \
"// this file is written by s6 (via /etc/services.d/cloudbeaver/run)
{
    server: {
        workspaceLocation: \"${CB_SERVER_WORKSPACELOCATION:-workspace}\",
        rootURI: \"${CB_SERVER_ROOTURI:-/cloudbeaver}\",
        serviceURI: \"${CB_SERVER_SERVICEURI:-/api/}\",
        expireSessionAfterPeriod: ${CB_SERVER_EXPIRESESSIONAFTERPERIOD:-3600000}
    },
    app: {
        anonymousAccessEnabled: ${CB_APP_ANONYMOUSACCESSENABLED:-true},
        anonymousAccessAllowed: ${CB_APP_ANONYMOUSACCESSENABLED:-true},
        anonymousUserRole: \"${CB_APP_ANONYMOUSUSERROLE:-admin}\",
        supportsCustomConnections: ${CB_APP_SUPPORTSCUSTOMCONNECTIONS:-true},
        publicCredentialsSaveEnabled: ${CB_APP_PUBLICCREDENTIALSSAVEENABLED:-true},
        adminCredentialsSaveEnabled: ${CB_APP_ADMINCREDENTIALSSAVEENABLED:-true},
        defaultNavigatorSettings: {},
        enabledAuthProviders: [
            \"local\"
        ]
    }
}
" > ${cloudbeaver_server_runtime_conf_file}
fi

# populate the .product.runtime.conf file
cloudbeaver_product_runtime_conf_file=${CB_SERVER_WORKSPACELOCATION}/.data/.product.runtime.conf
if [[ ! -f ${cloudbeaver_product_runtime_conf_file} ]] ; then
echo \
"// this file is written by s6 (via /etc/services.d/cloudbeaver/run)
{
    core: {
        // User defaults
        user: {
            defaultTheme: \"dark\",
            defaultLanguage: \"en\"
        },
        app: {
            // Log viewer config
            logViewer: {
                refreshTimeout: 3000,
                logBatchSize: 1000,
                maxLogRecords: 2000,
                maxFailedRequests: 3
            },
            navigationTree: {
                childrenLimit: 10000
            }
        }
    },
    plugin_data_spreadsheet_new: {
        hidden: false
    },
    plugin_data_export: {
        disabled: false
    },
    // Notifications config
    core_events: {
        notificationsPool: 5
    }
}
" > ${cloudbeaver_product_runtime_conf_file}
fi


# populate initial data sources on first run
cd ${CLOUDBEAVER_HOME} \
&& [ ! -d "${CB_SERVER_WORKSPACELOCATION}/.metadata" ] \
&& mkdir -p ${CB_SERVER_WORKSPACELOCATION}/GlobalConfiguration/.dbeaver \
&& cp -n ${CLOUDBEAVER_HOME}/conf/initial-data-sources.conf ${CB_SERVER_WORKSPACELOCATION}/GlobalConfiguration/.dbeaver/data-sources.json

# mkdir -p ${CB_SERVER_WORKSPACELOCATION}
# chown -R ${USER_NAME:-liveware}:${GROUP_NAME:-liveware} ${CB_SERVER_WORKSPACELOCATION}
# chown -R ${USER_NAME:-liveware}:${GROUP_NAME:-liveware} ${CLOUDBEAVER_HOME}
# chown -R ${USER_NAME}:${GROUP_NAME} ${user_workspacelocation} 

# build command args
export launcherJar=( ${CLOUDBEAVER_HOME}/server/plugins/org.eclipse.equinox.launcher*.jar )
export CB_CLI_ARGS=\
" -jar "${CB_CLI_ARGS_JAR:-" ${launcherJar} "}\
" -product "${CB_CLI_ARGS_PRODUCT:-" io.cloudbeaver.product.ce.product "}\
" -web-config "${CB_CLI_ARGS_WEB_CONFIG:-" ${CLOUDBEAVER_HOME}/conf/cloudbeaver.conf "}\
" -nl "${CB_CLI_ARGS_:-" en "}\
" -registryMultiLanguage "${CB_CLI_ARGS_:-""}\
" -vmargs "${CB_CLI_ARGS_VMARGS:-" -Xmx2048M "}\
${CB_CLI_ARGS_ADDITIONAL_ARGS}

# build command
export CB_CLI_COMMAND=${CB_CLI_COMMAND:="cd ${CLOUDBEAVER_HOME} && java ${CB_CLI_ARGS}"}

# chown -R root:root ${user_workspacelocation}
# chown -R root:root ${CB_SERVER_WORKSPACELOCATION}
chown -R ${USER_NAME}:${GROUP_NAME} ${user_workspacelocation}
chown -R ${USER_NAME}:${GROUP_NAME} ${CB_SERVER_WORKSPACELOCATION}
chown -R ${USER_NAME}:${GROUP_NAME} ${CLOUDBEAVER_HOME}
# eval "${CB_CLI_COMMAND}"

su - ${USER_NAME} -c "{
export CB_SERVER_NAME=${CB_SERVER_NAME} \
&& export CB_SERVER_URL=${CB_SERVER_URL} \
&& export CB_ADMIN_NAME=${CB_ADMIN_NAME} \
&& export CB_ADMIN_PASSWORD=${CB_ADMIN_PASSWORD} \
&& echo '---------------------------------------------------------------------' \
&& echo 'CloudBeaver User: $(id)' \
&& echo 'Cloudbeaver Command: '\"${CB_CLI_COMMAND}\" \
&& ${CB_CLI_COMMAND} \
&& echo '---------------------------------------------------------------------' \
; }"

